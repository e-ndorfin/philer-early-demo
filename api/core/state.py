"""
State definition for the LangGraph workflow.
"""

from typing import TypedDict, List, Tuple, Dict, Any, Optional
from enum import Enum, auto
from twilio.twiml.voice_response import VoiceResponse

class IntentType(str, Enum):
    """Types of user response intents."""
    CONFUSION = "confusion"
    QUESTION = "question" 
    ANSWER = "answer"
    CORRECTION = "correction"

class CorrectionType(str, Enum):
    """Types of corrections a user might want to make."""
    GO_BACK = "go_back"
    INLINE_UPDATE = "inline_update"
    NEEDS_CLARIFICATION = "needs_clarification"
    NOT_A_CORRECTION = "not_a_correction"

class CorrectionDetails(TypedDict, total=False):
    """Details about a correction request."""
    correction_type: str
    target_question_id: Optional[str]
    corrected_value: Optional[str]
    explanation: str

class ConversationState(TypedDict):
    """Represents the state of the conversation and form filling process."""
    
    # Form data being collected
    form_data: Dict[str, Any]
    
    # History of the conversation turns
    conversation_history: List[Tuple[str, str]] # List of (speaker, message)
    
    # ID of the question currently being addressed
    current_question_id: str
    
    # The latest response from the user
    user_response: Optional[str]
    
    # Classified intent of the user's response
    intent: Optional[str]
    
    # Response generated by the last agent node
    agent_response: Optional[str]

    #twilml reponse 
    twiml_response: Optional[VoiceResponse]
    
    # Flag indicating if the conversation should end
    is_done: bool 